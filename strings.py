# -*- coding: utf-8 -*-
"""Strings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Mnue1gGYtKtvKA_oeI5RICQ2ZRJrJgrY

###Funções e manipulação de Strings
"""

'aspas simples'

"aspas duplas"

texto="aspas duplas"
type(texto)

##Aspas triplas tem uma propriedade de ignorar a quebra de linha

"""Olhe esse 
 exemplo
 aqui

###Strings são imutáveis da forma que são criadas. Não é possível alterá-las diretamente
"""

r= 'paula'
print(r[0])

"""###No entanto, é possível manipular as strings de diversas maneiras"""

np= 'c' + r[1:]
print(np)

nome= 'paula'
nome= nome + ' mayumi'
print(nome)

pi = 3.14
info = 'O valor de pi é: ' + str(pi) #Tem que forçar o pi em string
print(info)

"""###É possível usar o slicing em strings:"""

string= 'mayumi'
string[0]

string[1:]

string[2:4]

string[:]

string[0:6]

string[1:3]

"""#Funções com Strings
###Existe uma variedade enorme:
### len; strip; lower() e upper(); replace(); split()
"""

s = 'Faculdade de Tecnologia de São Paulo'
len(s)
###A função len() conta todos os caracteres, inclusive espaços

s.lower()
###Todos os caracteres ficam em minúsculo

s.upper()
###Todos os caracteres ficam em maiúsculo

k= ' Conheça os nossos serviços '
k.strip()
###Essa função remove espaços no início e final da string

n='paula'
n.replace('u','o')
###Substituição de um caracter por outro

s.replace('a','@')
###Substitui todos os caracteres que possuem 'a'

s.replace('Faculdade', 'Puteiro')

s.split()
###Retorna um conjunto de substrings em formato de lista

s.split('Tecnologia')
###Separa por palavras (Argumentos) específicos

s.replace('a', 'X')

len(s.split())
###Combinando as funções, é possível contar a qntdd. de palavras

"""##Função .join()"""

###Primeiro, separam-se as palavras com a função .split()
lista_split = s.split()
lista_split

juntar= "//".join(lista_split)
juntar
###Agora, é possível juntar usando a função .join(),o que vem antes entre aspas é a forma que vai unir
###essas palavras

"""##Caracteres de escape
###\n - pular linha
###\t - tabulação
### \' - aspas simples
###\\ - barra invertida
"""

ex= 'Este é \n um exemplo'
print(sr)

ex2= 'Outro \t possível \t exemplo'
print(ex2)